apply plugin: 'com.android.application'

dependencies {
        //require
        modules {
            module("org.bouncycastle:bcprov-jdk15to18") {
                replacedBy("org.bouncycastle:bcprov-jdk15on")
            }
        }
        implementation project(':unityLibrary')
        def sdkVersion = "1.4.5" //find the latest version of the sdk here:https://search.maven.org/search?q=g:network.particle
     
        //tips
        //auth-service and auth-service-tiramisu are the same library,
        //tiramisu requires android targetSdkVersion 33,it supports set auth browser height percent
        
        //particle auth service(Required)  
        //implementation "network.particle:auth-service:$sdkVersion"
        //particle auth service tiramisu(Required), it supports set auth browser height percent,require targetSdkVersion 33
        implementation "network.particle:auth-service:$sdkVersion"
        
        //particle api service (Optional.) If you don't want to use the API service, you can remove this dependency.
        implementation "network.particle:api-service:${sdkVersion}"
        //particle wallet service (Optional.) If you don't want to use the wallet service, you can remove this dependency. wallet service contains the connect sdk 
        implementation "network.particle:wallet-service:${sdkVersion}"
        //particle unity bridge (Required) 
        implementation "network.particle:unity-bridge:${sdkVersion}"
        //particle biconomy (Optional.) If you don't want to use the service, you can remove this dependency.
        implementation("network.particle:aa-service:$sdkVersion")
        
         //particle mpc-core„ÄÅauth-core (Optional.) If you don't want to use the service, you can remove this dependency.
         //If the following services are not required, you need remove android:fullBackupContent="@xml/pn_backup_rules" from AndroidManifest.xml
        implementation("network.particle:mpc-core:$sdkVersion")
        implementation("network.particle:auth-core:$sdkVersion")
        //if only use connect sdk, you must add the following dependencies 
//         def sdkVersion = "0.9.31" find the latest version of the sdk here:https://search.maven.org/search?q=g:network.particle
//         implementation "network.particle:connect-common:${connectVersion}"
//         implementation "network.particle:connect:${connectVersion}"
//         implementation "network.particle:connect-evm-adapter:${connectVersion}"
//         implementation "network.particle:connect-solana-adapter:${connectVersion}"
//         implementation "network.particle:connect-phantom-adapter:${connectVersion}"
//         implementation "network.particle:connect-wallet-connect-adapter:${connectVersion}"
    }
Properties localProps = getLocalProperties()
android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

      compileOptions {
            sourceCompatibility(JavaVersion.VERSION_1_8)
            targetCompatibility(JavaVersion.VERSION_1_8)
        }
    
    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
         manifestPlaceholders = [
                 PN_PROJECT_ID        : localProps['particle.network.project_id'],
                 PN_PROJECT_CLIENT_KEY: localProps['particle.network.project_client_key'],
                 PN_APP_ID            : localProps['particle.network.app_id']
        ]
    }

    aaptOptions {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }**SIGN**

    lintOptions {
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt')**SIGNCONFIG**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt')**SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****PLAY_ASSET_PACKS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****LAUNCHER_SOURCE_BUILD_SETUP**


def getLocalProperties() {
    Properties props = new Properties()
    props.load(project.rootProject.file('gradle.properties').newDataInputStream())
    return props
}

